--En el caso desarrollado del presente capitulo se utilizara la base de datos llamada: RENT_CAR
--La base de datos fue creada en capitulos anteriores y ya cuenta con registros en cada una de sus tablas.
--Implementar las siguientes funciones:
use RENT_CAR
go
--1.Funcion que devuelva el monto promedio de alquiler, para mostrar un reporte de la siguiente manera:
--		AÑO ALQUILER		PROMEDIO POR AÑO
--Primera forma:
select YEAR(A.FEC_ALQ) 'AÑO ALQUILER', AVG(A.MON_ALQ) 'PROMEDIO POR AÑO' from tblAlquiler A
group by YEAR(A.FEC_ALQ) 
go
--Segunda forma:
if OBJECT_ID('FN_PromAlquiler') is not null
begin
drop function FN_PromAlquiler
end
go
CREATE FUNCTION dbo.FN_PromAlquiler
(
    @año int
)
RETURNS MONEY
AS
BEGIN
declare @Prom money
select @Prom =  AVG(MON_ALQ) from tblAlquiler where YEAR(FEC_ALQ)= @año
    RETURN @prom
END
GO
--Reporte:
select distinct YEAR(FEC_ALQ) AS [AÑO ALQUILER], dbo.FN_PromAlquiler(YEAR(FEC_ALQ)) AS [PROMEDIO POR AÑO] FROM tblAlquiler
GO



--2.Funcion que permita mostrar el monto minimo de alquiler en un determinado año, para luego mostrar el siguiente reporte:
--		AÑO ALQUILER		MONTO MINIMO
--Primera forma:
select YEAR(FEC_ALQ) 'AÑO ALQUILER', MIN(MON_ALQ) 'MONTO MINIMO' from tblAlquiler
group by  YEAR(FEC_ALQ)
go
--Segunda forma:
IF OBJECT_ID('FN_MINIMOxAÑO') IS NOT NULL
BEGIN
DROP FUNCTION FN_MINIMOxAÑO
END
GO

CREATE FUNCTION dbo.FN_MINIMOxAÑO
(
    @anio int
)
RETURNS MONEY
AS
BEGIN
DECLARE @MIN MONEY
SELECT @MIN= MIN(A.MON_ALQ)  FROM tblAlquiler A WHERE YEAR(A.FEC_ALQ) = @anio
    RETURN @MIN
END
GO
--Reporte:
SELECT DISTINCT YEAR(A.FEC_ALQ) AS [AÑO ALQUILER], dbo.FN_MINIMOxAÑO(YEAR(A.FEC_ALQ)) as [MONTO MINIMO] FROM tblAlquiler A
GO
--3.Funcion que permita mostrar el monto acumulado de alquiler en un determinado año, para luego mostrar el siguiente reporte:
--		AÑO ALQUILER		MONTO ACUMULADO
--Primera forma:
select YEAR(FEC_ALQ) 'AÑO ALQUILER', SUM(MON_ALQ) 'MONTO ACUMULADO' from tblAlquiler
group by  YEAR(FEC_ALQ)
go
--Segunda forma:
IF OBJECT_ID('FN_MONTOxAÑO') IS NOT NULL
BEGIN
DROP FUNCTION FN_MONTOxAÑO
END
GO
CREATE FUNCTION DBO.FN_MONTOxAÑO (@ANIO INT)
RETURNS MONEY
AS
BEGIN
DECLARE @MONTO MONEY;
SELECT @MONTO= SUM(MON_ALQ) FROM tblAlquiler WHERE YEAR(FEC_ALQ) = @ANIO;
RETURN @MONTO;
END
GO
--REPORTE:
SELECT DISTINCT YEAR(FEC_ALQ) AS [AÑO ALQUILER], dbo.FN_MONTOxAÑO(YEAR(FEC_ALQ)) AS [MONTO ACUMULADO] FROM tblAlquiler
GO

--4.Funcion que permita mostrar el total de automoviles de un determinado color, para luego mostrar un reporte de la siguiente manera:
--		COLOR DE AUTO			TOTAL DE AUTOS
--Primera forma:
select  COL_AUT 'COLOR DE AUTO', COUNT(*) 'TOTAL DE AUTOS' from tblAutomovil
group by COL_AUT
go
--Segunda forma:
IF OBJECT_ID('FN_AUTOxCOLOR') IS NOT NULL
BEGIN
DROP FUNCTION FN_AUTOxCOLOR
END
GO
CREATE FUNCTION DBO.FN_AUTOxCOLOR(@COLOR VARCHAR(50))
RETURNS INT
AS
BEGIN
DECLARE @TOTAL INT;
SELECT @TOTAL= COUNT(*) FROM tblAutomovil WHERE COL_AUT = @COLOR;
RETURN @TOTAL;
END
GO
--REPORTE:
SELECT DISTINCT COL_AUT AS [COLOR DE AUTO], dbo.FN_AUTOxCOLOR(COL_AUT) AS [TOTAL DE AUTOS] FROM tblAutomovil
GO

--5.Funcion que permita mostrar la diferencia de años entre la fecha de alquiler y la fecha actual. Mostrar el siguiente reporte:
--ALQUILER		MONTO ALQUILER			FECHA DE ALQUILER			DIFERENCIA DE AÑOS
--PRIMERA FORMA:
select A.NUM_ALQ 'ALQUILER', A.MON_ALQ 'MONTO ALQUILER', A.FEC_ALQ 'FECHA ALQUILER', DATEDIFF(YYYY,A.FEC_ALQ,GETDATE()) 'DIFERENCIA DE AÑOS'
from tblAlquiler A
go
--SEGUNDA FORMA:
IF OBJECT_ID('FN_DIFERENCIA_ANIOS') IS NOT NULL
BEGIN
DROP FUNCTION FN_DIFERENCIA_ANIOS
END
GO
CREATE FUNCTION DBO.FN_DIFERENCIA_ANIOS(@F_ALQUILER DATE)
RETURNS INT
AS
BEGIN
DECLARE @DIFERENCIA INT;
SELECT @DIFERENCIA= DATEDIFF(YYYY,@F_ALQUILER,GETDATE());
RETURN @DIFERENCIA;
END
GO
--REPORTE:
SELECT DISTINCT
NUM_ALQ AS [ALQUILER], MON_ALQ AS [MONTO ALQUILER], FEC_ALQ AS [FECHA ALQUILER], dbo.FN_DIFERENCIA_ANIOS(FEC_ALQ) AS [DIFERENCIA DE AÑOS]
FROM tblAlquiler
GO
--6.IMPLEMENTAR UNA FUNCION TABLA EN LINEA QUE MUESTRE LOS REGISTROS DE TODOS LOS CLIENTES. DESPUES MUESTRE LOS CLIENTES DE UN DETERMINADO DISTRITO.
IF OBJECT_ID('FN_LISTACLIENTES') IS NOT NULL
BEGIN
DROP FUNCTION FN_LISTACLIENTES
END
GO
CREATE FUNCTION DBO.FN_LISTACLIENTES()
RETURNS TABLE
AS
RETURN
(
SELECT
C.IDE_CLI AS [CODIGO],
CONCAT(C.NOM_CLI,SPACE(1),
C.APE_CLI) AS [CLIENTE],
C.DNI_CLI AS [DNI],
C.TEL_CLI AS [TELEFONO],
D.DES_DIS AS [DISTRITO],
C.COR_CLI AS [CORREO]
FROM tblCliente C
INNER JOIN tblDistrito D ON D.IDE_DIS=C.IDE_DIS
)
GO
--LISTAR TODOS LOS REGISTROS:
SELECT * FROM FN_LISTACLIENTES()
GO
--MOSTRANDO LOS CLIENTES DE UN DETERMINADO DISTRITO.
SELECT * FROM FN_LISTACLIENTES() AS FN
WHERE FN.DISTRITO='LA MOLINA'
GO
--7.IMPLEMENTAR UNA FUNCION TABLA EN LINEA QUE MUESTRE EL REGISTRO DE LOS AUTOMOVILES DE UN DETERMINADO COLOR:
IF OBJECT_ID('FN_AUTOxCOLOR') IS NOT NULL
BEGIN
DROP FUNCTION FN_AUTOxCOLOR
END
GO
CREATE FUNCTION DBO.FN_AUTOxCOLOR(@COLOR VARCHAR(50))
RETURNS TABLE
AS
RETURN

(
SELECT MAT_AUT AS [MATRICULA], COL_AUT AS [COLOR], MOD_AUT AS [MODELO] FROM tblAutomovil WHERE COL_AUT=@COLOR
)
GO
--REPORTE:
SELECT * FROM DBO.FN_AUTOxCOLOR('PLATA')
GO
--8.IMPLEMENTAR UNA FUNCION TABLA EN LINEA QUE MUESTRE EL REGISTRO DE LOS ALQUILERES. LUEGO MOSTRAR LOS ALQUILERES DE UN DETERMINADO AÑO.
IF OBJECT_ID('FN_LISTAREGISTROS') IS NOT NULL
BEGIN
DROP FUNCTION FN_LISTAREGISTROS
END
GO
CREATE FUNCTION DBO.FN_LISTAREGISTROS()
RETURNS TABLE
AS
RETURN
(
SELECT A.NUM_ALQ AS [ALQUILER], A.FEC_ALQ AS [FECHA], A.MON_ALQ AS [MONTO] FROM tblAlquiler A
)
GO
--TODOS LOS REGISTROS DE ALQUILER:
SELECT * FROM DBO.FN_LISTAREGISTROS()
GO
--LOS REGISTROS DE ALQUILER DE UN AÑO ESPECIFICO:
DECLARE @ANIO INT=2011;
SELECT * FROM DBO.FN_LISTAREGISTROS() AS FN
WHERE YEAR(FN.FECHA) = @ANIO
GO
--9.IMPLEMENTAR UNA FUNCION MULTISENTENCIA QUE PERMITA LISTAR TODOS LOS REGISTROS DE AUTOMOVILES.
IF OBJECT_ID('FN_AUTOS') IS NOT NULL
BEGIN
DROP FUNCTION FN_AUTOS
END 
GO
CREATE FUNCTION DBO.FN_AUTOS()
RETURNS @TBL_AUTOS TABLE 
(
	MATRICULA CHAR(10),
	COLOR VARCHAR(30),
	MODELO VARCHAR(30)
)
AS
BEGIN
    INSERT INTO @TBL_AUTOS
    SELECT A.MAT_AUT,A.COL_AUT,A.MOD_AUT FROM tblAutomovil AS A
    RETURN 
END
GO
--REGISTROS DE LOS AUTOMOVILES:
SELECT * FROM DBO.FN_AUTOS()
GO

--10.IMPLEMENTAR UNA FUNCION MULTISENTENCIA QUE PERMITA LISTAR TODOS LOS REGISTROS DE DETALLES DE ALGUILER.
IF OBJECT_ID('FN_DETALLES_ALQUILER') IS NOT NULL
BEGIN
 DROP FUNCTION FN_DETALLES_ALQUILER
 END
 GO
 CREATE FUNCTION DBO.FN_DETALLES_ALQUILER()
 RETURNS @TBL_DETALLES TABLE
 (
 [NUMERO ALQUILER] INT,
 [ID CLIENTE] CHAR(5),
 [MATRICULA] CHAR(10)
 )
 AS 
 BEGIN

INSERT INTO @TBL_DETALLES
SELECT D.NUM_ALQ, D.IDE_CLI, D.MAT_AUT FROM tblDetalleAlquiler D
RETURN
 END
 GO
 --REGISTROS DE DETALLE DE ALQUILER:
 SELECT * FROM DBO.FN_DETALLES_ALQUILER()
 GO